service: toro-microservice-backend
frameworkVersion: '3'
plugins:
  - serverless-plugin-typescript
  - serverless-tscpaths
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies
  - serverless-offline-local-authorizers-plugin
  - serverless-offline

package:
  individually: true
  excludeDevDependencies: false
  patterns:
    - '!node_modules/**' # no need to add this, this plugin does it for you

provider:
  name: aws
  runtime: nodejs18.x

custom:
  includeDependencies:
    enableCaching: true
  authorizer:
    azure:
      name: custom-authorizer-lambda
      identitySource: method.request.header.Authorization
      type: request
functions:
  custom-authorizer-lambda:
    handler: src/main/requests/authorization.handler

  get-checking-account:
    handler: src/main/requests/checkingAccount.getCheckingAccount
    events:
      - http:
          path: /accounts
          method: get
          cors: true
          authorizer: ${self:custom.authorizer.azure}
          localAuthorizer:
            name: 'integrationAuthorizer'
            type: 'request'

